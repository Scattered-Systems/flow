name: Rust

on:
  push:
    branches-ignore: [ "dev*", "next*" ]
    tags: [ "beta*", "nightly*", "prod*", "v*.*.*"]
  pull_request:
    branches: [ "main", "master",  "beta*" ]
    tags: [ "beta*", "nightly*", "prod*", "v*.*.*"]
  schedule:
    - cron: "30 9 * * 5"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  authenticate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: cargo login ${CARGO_REGISTRY_TOKEN}
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: test (release)
      run: |
        cargo build --release --workspace 
        cargo test --all --all-features --color ${CARGO_TERM_COLOR} --release -v
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - run: cargo build --release -v --workspace
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: bundle
          path: /target/release/flow
      - name: Cache
        uses: actions/cache@v3.0.11
        with:
          path: "/target/release/flow"
          key: "build"
      - name: release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              body: 'View the assets bundled below to find a suitable installer for your host system',
              configPath: 'desktop/tauri.conf.json',
              draft: false,
              name: `Flow v${process.env.PACKAGE_VERSION}`,
              owner: context.repo.owner,
              prerelease: true,
              repo: context.repo.repo,
              tag_name: `beta-v${process.env.PACKAGE_VERSION}`
            })
            return data.id
